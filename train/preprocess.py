# -*- coding: utf-8 -*-

#     # Осмотр и предобработка данных
#     
#     ## Колонка 0
#     Индекс запроса. Строго упорядочен и нарастает без пропусков.
#     
#     ## Колонка 1
#     Метка релевантности. Принимает значения {0, 1}. Используется для
#     определения вероятности порядка ранжирования двух примеров из одного запроса.
#     
#     ## Колонка 2
#     Величина в диапазоне (0, 0.3 (?)). Во всей выборке имеется одно отрицательное 
#     значение (строка 1726654), вероятно опечатка. Распределение логарифма имеет 
#     одномодальный вид, скошенный в сторону меньших значений. Медиана распределения
#     логарифма: -6.0. Среднее: -6.2.
#     
#     ## Колонка 3
#     Значение в диапазоне (0, 0.4 (?)). Имеется значительный экцесс значения 9.8250e-4.
#     Данное значение встречается более чем в 30% случаев. Аномальная частота данного
#     значения хорошо видна на распределении логарифма величины. Данное распределение
#     имеет вид суммы нескольких сильно перекрывающихся распределений. Среднее значение
#     около -6.3. Имеются еще несколько значений, которые встречаются аномально часто.
#     
#     ## Колонка 4
#     Значение в диапазоне (0, 1 (?)). Отсутствующее значение -1.0. Распределение логарифма
#     имеет вид суммы сильно перекрывающихся распределений. Среднее значение около -5.6.
#     
#     ## Колонка 5
#     Идикатор со значениями {0, 1}. Вероятность нуля и единицы приблизительно равные.
#     
#     ## Колонка 6
#     Значение в диапазоне (0, 25). Распределение логарифма имеет вид одномодального 
#     распределения с медианой в районе 0. 
#     
#     ## Колонка 7
#     Величина в диапазоне от 1 до бесконечности (?). Значение 0 соответствует отсутствующему значению.
#     Имеет многомодальное распределение с периодическими максимумами через каждые 1440 значений. Первый 
#     максимум в районе 12. Период в 1440 позволяет предположить, что это временная
#     переменная измеренная в минутах, а период соответствует одним суткам. Дополнительным
#     подтверждением является тот факт, что распределение обрезано точно на 30 "днях". До 
#     точки обрезания гистограмма ведет себя гладко, а за пределом встречаются только 
#     отдельностоящие значения, которые можно заменить.
#     
#     ## Колонка 8
#     Значение в диапазоне от 0 до бесконечности (?). Единственное во всей колонке 
#     отрицательное значение в той же строке 1726654. Распределение величины
#     имеет монотонно убывающий вид с очень тяжелыми хвостом. Распределение
#     логарифма значения симметрично относительно значения 10. 
#     
#     ## Колонка 9
#     Значение в диапазоне от 1 до бесконечности (?). Значение 0 соответствует отсутствующему значению.
#     Значения от 1 до 100 встречаются очень редко. Начиная со значения 101 распределение имеет монотонный
#     вид экспоненциального с ослабленным хвостом. Среднее значение логарифма - в районе 9.
#     
#     ## Колонка 10
#     Значение в диапазоне от (0, 0.3). Значительный эксцесс того же значения 9.8250, встречающееся
#     в порядка 7% случаев. Распределение логарифма величины имеет одномодальный вид со средним -6.7.
#     
#     ## Колонка 11
#     Значение в диапазоне от 0 до 50. Сконцентрирована вокруг значения 1. Имеется значительный эксцесс
#     значения 1.5 (30% случаев). 
#     
#     ## Колонка 12
#     Значение в диапазоне (0, 0.1). Среднее значение логарифма: -6.4


import math

def preproc(data):

    # total number of inputs
    ninp = 13;
        
    # normalize
    for q in data:
        for j in xrange(len(q)):
            
            # old data
            r = q[j]
            
            # new data
            p = [0] * (ninp + 2)
            
            # column 1: pass
            p[0] = r[0]
            
            # column 2: pass
            p[1] = r[1]
            
            # column 3: logarithm and center
            p[2] = math.log(r[2]) + 6.0
            
            # column 4: logarithm and center
            p[3] =  math.log(r[3]) + 6.3
            
            # column 5: logarithm and center 
            # additional column for missing values
            if r[4] == -1.0:
                p[4] = 0.0      # replace missing value
                p[5] = 1.0      # missing indicator
            else:
                p[4] = math.log(r[4]) + 5.6
                p[5] = 0.0      # missing indicator

            # column 6: pass
            p[6] = r[5]
            
            # column 7: logarithm
            p[7] = math.log(r[6])
            
            # column 8: 
            # truncate values above 1440*30 
            # transform scale to days
            if r[7] > 1440*30.0:
                p[8]  = 30.0
            else:
                p[8] = r[7] / 1440.0
            
            # column 9: logarithm and center 
            p[9] = math.log1p(r[8]) - 10.0
            
            # column 10:
            # values < 101 are missing values
            if r[9] <= 101.0:
                p[10] = 0.0
                p[11] = 1.0     # missing value indicator: value is missing
            else:
                p[10] = math.log(r[9]) - 9.0
                p[11] = 0.0     # missing value indicator: value is present
            
            # column 11: logarithm and center
            p[12] = math.log(r[10]) + 6.7
            
            # column 12: center
            p[13] = r[11] - 1.0
            
            # column 13:
            p[14] = math.log(r[12]) + 6.4
            
            # store updated data
            q[j] = p
            
            
            
            
            
            
            
            